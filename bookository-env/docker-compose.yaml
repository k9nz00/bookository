services:
  adminer:
    image: adminer:4.8.1
    hostname: adminer
    container_name: adminer
    restart: always
    ports:
      - "8010:8080"
    networks:
      bookository-default-network:
    depends_on:
      - postgres

  postgres:
    image: postgres:15
    hostname: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - bookository-db:/var/lib/postgresql/data
      - "./resources/covers/:/opt/covers:ro"
      - "./resources/books/:/opt/books:ro"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bookository
    networks:
      bookository-default-network:

  bookository-server:
    image: "bookository/bookository-server:${IMAGE_VERSION}"
    hostname: bookository-server
    container_name: bookository-server
    restart: on-failure
    ports:
      - "8020:8020"
      - "38005:38005"
    environment:
      DB_JDBC_URL: jdbc:postgresql://postgres:5432/bookository?currentSchema=bookository
      DB_USER: "postgres"
      DB_PWD: "postgres"
    networks:
      bookository-default-network:
    depends_on:
      - postgres

  bookository-migration:
    image: "bookository/bookository-migration:${IMAGE_VERSION}"
    restart: on-failure
    ports:
      - "8030:8030"
      - "38006:38006"
    environment:
      MIGRATION_SERVER_PORT: 8030
      MIGRATION_CHANGE_LOG_PATH: "classpath:db/changelog"
      MIGRATION_DEFAULT_SCHEMA: "public"
    networks:
      bookository-default-network:
    depends_on:
      - postgres

  bookository-migration-executor:
    image: "bookository/migration-scripts-executor:${IMAGE_VERSION}"
    restart: on-failure
    volumes:
      - "./migration/scripts/:/opt/scripts:ro"
    networks:
      bookository-default-network:
    depends_on:
      - postgres
      - bookository-migration

  #  bookository-web:
  #    image: bookository/bookository-web:br_it
  #    restart: on-failure
  #    network_mode: bridge
  #    ports:
  #      - "81:3000"
  #    networks:
  #      bookository-default-network:
  #
  #    environment:
  #      API_HOST: "http://localhost:8020/api"

  zookeeper-1:
    image: confluentinc/cp-zookeeper:7.4.4
    hostname: zookeeper-1
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-secrets:/etc/zookeeper/secrets
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    networks:
      bookository-default-network:

  kafka-1:
    image: confluentinc/cp-kafka:7.4.4
    hostname: kafka-1
    container_name: kafka-1
    ports:
      - "29092:9092"
      - "9997:9997"
    volumes:
      - kafka-1-secrets:/etc/kafka/secrets
      - kafka-1-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper-1:2181"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka-1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      bookository-default-network:
    depends_on:
      - zookeeper-1

  kafka-2:
    image: confluentinc/cp-kafka:7.4.4
    hostname: kafka-2
    container_name: kafka-2
    ports:
      - "39092:9092"
      - "9998:9997"
    volumes:
      - kafka-2-secrets:/etc/kafka/secrets
      - kafka-2-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_JMX_PORT: 9998
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      bookository-default-network:
    depends_on:
      - zookeeper-1

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: bookository-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9092,kafka-2:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-1:2181
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      bookository-default-network:
    depends_on:
      - zookeeper-1
      - kafka-1
      - kafka-2

networks:
  bookository-default-network:
    driver: bridge

volumes:
  bookository-db:
  zookeeper-secrets:
  zookeeper-data:
  zookeeper-log:
  kafka-1-secrets:
  kafka-1-data:
  kafka-2-secrets:
  kafka-2-data:
